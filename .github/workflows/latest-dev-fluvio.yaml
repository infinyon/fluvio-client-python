name: Fluvio CI with latest fluvio

on:
  workflow_dispatch:
  push:
    branches: [main]
  schedule:
    - cron: "0 14 * * *"

jobs:
  smoke_test:
    name: Test against Dev cluster
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        rust: [stable]
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Install rust ${{ matrix.rust }}
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Update the fluvio client to use the latest on the fluvio master branch.
        run: |
          # work around cargo bug
          #cargo add fluvio --git https://github.com/infinyon/fluvio --branch master
          sed -i.bak "s/tag = "\(.*\)"/branch = "master"/g" Cargo.toml
          git diff Cargo.toml

      - name: check
        run: |
          cargo check

      - name: Build
        run: |
          make build-dev

      - uses: AbsaOSS/k3d-action@v2
        name: "Create fluvio k3d Cluster"
        with:
          cluster-name: "fluvio"
      - name: Sleep 20 to ensure k3d cluster is ready
        run: sleep 20

      - name: Install Fluvio Cluster on k3d
        uses: infinyon/fluvio@master
        with:
          cluster-type: k3d
          version: latest

      - name: Sleep 10 to ensure the fluvio cluster is ready
        run: sleep 10
      - name: Check Fluvio Installation
        run: |
          fluvio version
          fluvio topic list
          fluvio topic create foobar
          sleep 3
          echo foo | fluvio produce foobar
          fluvio consume foobar -B -d

      - name: Test
        run: |
          make integration-tests

      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        if: failure()
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
